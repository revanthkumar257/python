from flask import Flask, render_template, request

# Create an instance of the Flask class
app = Flask(_name_)

# Home page route
@app.route('/')
def home():
    return render_template('home.html')


@app.route('/about')
def about():
    return render_template('about.html')


@app.route('/contact', methods=['GET', 'POST'])
def contact():
    if request.method == 'POST':
    
        name = request.form.get('name')
        email = request.form.get('email')
        message = request.form.get('message')
        
        print(f'Name: {name}, Email: {email}, Message: {message}')
        return render_template('contact.html', success=True)
    return render_template('contact.html')

if _name_ == '_main_':
    app.run(debug=True)


from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy

app = Flask(_name_)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80), nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)

    def _repr_(self):
        return f'<User {self.name}>'

@app.route('/')
def home():
    users = User.query.all()
    return render_template('home.html', users=users)

@app.route('/add', methods=['GET', 'POST'])
def add_user():
    if request.method == 'POST':
        name = request.form['name']
        email = request.form['email']
        new_user = User(name=name, email=email)
        try:
            db.session.add(new_user)
            db.session.commit()
            return redirect(url_for('home'))
        except Exception as e:
            return f'An error occurred: {e}'
    return render_template('add_user.html')

@app.route('/update/<int:id>', methods=['GET', 'POST'])
def update_user(id):
    user = User.query.get_or_404(id)
    if request.method == 'POST':
        user.name = request.form['name']
        user.email = request.form['email']
        try:
            db.session.commit()
            return redirect(url_for('home'))
        except Exception as e:
            return f'An error occurred: {e}'
    return render_template('update_user.html', user=user)

@app.route('/delete/<int:id>')
def delete_user(id):
    user = User.query.get_or_404(id)
    try:
        db.session.delete(user)
        db.session.commit()
        return redirect(url_for('home'))
    except Exception as e:
        return f'An error occurred: {e}'

if _name_ == '_main_':
    db.create_all()  # Create database and tables
    app.run(debug=True)
